---
- name: Install and Configure Web Servers (Gunicorn for Flask) - Git Clone Approach
  hosts: webservers
  become: true
  vars_files:
    - ../vars/vars.yml
    - ../vars/secret-vars.yml

  tasks:
    - name: Update and Upgrade System Packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install dependencies
      apt:
        name:
          - python3-pip
          - python3-venv
          - git
          - nginx
        state: present

    - name: Ensure deployment directory exists
      file:
        path: "{{ web_app_dir }}"
        state: directory
        mode: '0755'

    - name: Clone TEMS repo from GitHub
      git:
        repo: "{{ web_repo_url }}"
        dest: "{{ web_app_dir }}"
        version: "{{ web_repo_branch }}"
        force: yes

    - name: Create Python virtual environment
      command: python3 -m venv venv
      args:
        chdir: "{{ web_app_dir }}/ansible/files"
        creates: "{{ web_app_dir }}/ansible/files/venv/bin/activate"

    - name: Install Python packages
      pip:
        virtualenv: "{{ web_app_dir }}/ansible/files/venv"
        requirements: "{{ web_app_dir }}/ansible/files/requirements.txt"

    - name: Generate .env file from Jinja2 template
      template:
       src: "../templates/env.j2" 
       dest: "{{ web_app_dir }}/ansible/files/.env"
       mode: "0600"

    - name: Create systemd service for TEMS
      copy:
        dest: "/etc/systemd/system/{{ app_service_name }}.service"
        content: |
          [Unit]
          Description=TEMS Flask App
          After=network.target

          [Service]
          User=root
          Group=root
          WorkingDirectory={{ web_app_dir }}/ansible/files
          EnvironmentFile={{ web_app_dir }}/ansible/files/.env
          ExecStart={{ web_app_dir }}/ansible/files/venv/bin/gunicorn --bind 0.0.0.0:5000 app:app
          Restart=always

          [Install]
          WantedBy=multi-user.target
      notify: Restart TEMS

  handlers:
    - name: Restart TEMS
      systemd:
        name: "{{ app_service_name }}"
        state: restarted
        enabled: yes
