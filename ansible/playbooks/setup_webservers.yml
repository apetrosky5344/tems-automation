---
- name: Install and Configure Web Servers
  hosts: webservers
  become: true
  vars_files:
    - ../vars/vars.yml
    - ../vars/secret-vars.yml
  tasks:
    - name: Update and Upgrade System Packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install Flask & Dependencies
      apt:
        name:
          - python3-pip
          - python3-venv  # Ensure virtualenv is available
          - nginx
        state: present

    - name: Clone TEMS Web Application
      git:
        repo: "https://github.com/apetrosky5344/tems-automation.git"
        dest: "/var/www/tems"
        clone: yes
        update: yes

    - name: Ensure Correct Repository Paths
      file:
        path: "/var/www/tems/webapp"
        state: directory
        owner: tems_admin
        group: tems_admin
        mode: '0755'

    - name: Create Virtual Environment for Python
      command: python3 -m venv /var/www/tems/venv
      args:
        creates: /var/www/tems/venv

    - name: Install Required Python Packages
      pip:
        requirements: "/var/www/tems/webapp/requirements.txt"
        virtualenv: "/var/www/tems/venv"

    - name: Create .env File for Flask App
      copy:
        dest: "/var/www/tems/.env"
        content: |
          DB_NAME= "{{ db_name }}"
          DB_USER= "{{ db_user }}"
          DB_PASS= "{{ db_password }}"
          DB_HOST= "{{ db_host }}"
          DB_PORT= "{{ db_port }}"

    - name: Set Correct Permissions for Web Application Directory
      file:
        path: "/var/www/tems"
        state: directory
        owner: tems_admin
        group: tems_admin
        mode: '0755'
        recurse: yes

    - name: Create Systemd Service for TEMS Web Application
      copy:
        dest: "/etc/systemd/system/tems_app.service"
        content: |
          [Unit]
          Description=TEMS Web Application
          After=network.target

          [Service]
          User=tems_admin
          WorkingDirectory=/var/www/tems/webapp
          ExecStart=/var/www/tems/venv/bin/python /var/www/tems/webapp/app.py
          Restart=always

          [Install]
          WantedBy=multi-user.target
      notify: Restart TEMS App Service

    - name: Reload Systemd and Enable TEMS App Service
      systemd:
        daemon_reload: yes
        name: tems_app
        state: started
        enabled: yes

  handlers:
    - name: Restart TEMS App Service
      systemd:
        name: tems_app
        state: restarted

